---
- name: Create gpg-agent main directory
  file:
    path: "{{ gpg_agent_dir }}"
    state: directory
    owner: "{{ gpg_agent_user }}"
    group: "{{ gpg_agent_user }}"
    mode: 0700

- name: Create gpg-agent gpghome
  file:
    path: "{{ gpg_agent_gpghome }}"
    state: directory
    owner: "{{ gpg_agent_user }}"
    group: "{{ gpg_agent_user }}"
    mode: 0700

- name: update gpg-agent.conf
  template:
    src: gpg-agent.conf.j2
    dest: "{{ gpg_agent_gpghome }}/gpg-agent.conf"
    owner: "{{ gpg_agent_user }}"
    group: "{{ gpg_agent_user }}"
    mode: 0700
  notify:
   - restart gpg-agent

- name: update gpg.conf
  template:
    src: gpg.conf.j2
    dest: "{{ gpg_agent_gpghome }}/gpg.conf"
    owner: "{{ gpg_agent_user }}"
    group: "{{ gpg_agent_user }}"
    mode: 0700
  notify:
   - restart gpg-agent

- name: install pubkey
  copy:
    src: pubkey
    dest: "{{ gpg_agent_dir }}/pubkey"

- name: import public key
  command: "gpg --homedir={{ gpg_agent_gpghome }}  --import {{ gpg_agent_dir }}/pubkey"
  args:
    creates: "{{ gpg_agent_gpghome }}/secring.gpg"
  become: true
  become_user: "{{ gpg_agent_user }}"

- name: import private key
  command: "gpg --homedir={{ gpg_agent_gpghome }}  --card-status"
  args:
    creates: "{{ gpg_agent_gpghome }}/trustdb.gpg"
  become: true
  become_user: "{{ gpg_agent_user }}"

- name: add systemd unit
  template:
    src: gpg-agent.service.j2
    dest: /etc/systemd/system/gpg-agent.service
  notify:
   - restart gpg-agent

- name: enable and start gpg-agent
  systemd:
    name: gpg-agent
    daemon_reload: yes
    enabled: yes
  notify:
   - restart gpg-agent
