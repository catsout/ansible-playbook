---
- name: disable nginx* from EPEL
  yum_repository:
    name: epel
    description: Extra Packages for Enterprise Linux 7 - $basearch
    enabled: yes
    exclude: nginx*
    failovermethod: priority
    gpgcheck: yes
    gpgkey: file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
    metalink: https://mirrors.fedoraproject.org/metalink?repo=epel-7&arch=$basearch
  when: ansible_distribution == "CentOS"

- name: add bochecha-nginx COPR
  copy:
    src: bochecha-nginx-epel-7.repo
    dest: /etc/yum.repos.d/bochecha-nginx-epel-7.repo
  when: ansible_distribution == "CentOS"

- name: install nginx
  package:
    name: nginx
    state: latest

- name: create default.d directory
  file:
    path: /etc/nginx/default.d
    state: directory

- name: install helper for validating config files
  copy:
    src: ansible-validate-nginx-config
    dest: /usr/local/sbin/ansible-validate-nginx-config
    mode: 0750

- name: install nginx.conf
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
    validate: /usr/sbin/nginx -t -c %s
  notify:
   - reload nginx

- name: install nginx mime.types
  copy:
    src: mime.types
    dest: /etc/nginx/mime.types
  notify:
   - reload nginx

- name: install RFC7919 ffdhe2048 DH groups
  copy:
    src: ffdhe2048.pem
    dest: '{{ nginx_dhparam_file }}'
  notify:
   - reload nginx

- name: install nginx conf.d/gzip.conf
  copy:
    src: conf.d/gzip.conf
    dest: /etc/nginx/conf.d/gzip.conf
    validate: /usr/local/sbin/ansible-validate-nginx-config %s conf.d/gzip.conf
  notify:
   - reload nginx

- name: install nginx default.d/dehydrated.conf
  copy:
    src: default.d/dehydrated.conf
    dest: /etc/nginx/default.d/dehydrated.conf
    validate: /usr/local/sbin/ansible-validate-nginx-config %s default.d/dehydrated.conf
  notify:
   - reload nginx

- name: install nginx default.d/ssl.conf
  template:
    src: default.d/ssl.conf.j2
    dest: /etc/nginx/default.d/ssl.conf
    validate: /usr/local/sbin/ansible-validate-nginx-config %s default.d/ssl.conf
  notify:
   - reload nginx

- name: permit http/https services in firewall (default zone)
  firewalld:
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
  with_items:
   - http
   - https

- name: permit http/https services in firewall (dmz zone)
  firewalld:
    service: "{{ item }}"
    state: enabled
    permanent: true
    immediate: true
    zone: dmz
  with_items:
   - http
   - https

- name: allow httpd to make network connections
  seboolean:
    name: httpd_can_network_connect
    state: '{{ nginx_network_connect | bool }}'
    persistent: yes
