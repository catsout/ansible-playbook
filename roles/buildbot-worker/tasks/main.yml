- name: install buildbot packages (deb)
  package:
    name:
      - appstream-util
      - build-essential
      - elfutils
      - flatpak-builder
      - git
      - python-pip
      - ostree
      - virtualenv
      # repoclient needs these:
      - python3-requests
      - python3-gi
    state: latest
  when: ansible_os_family == "Debian"
  tags:
   - buildbot-worker

- name: install buildbot packages (rpm)
  yum:
    name:
       - "@development-tools"
       - python34-pip
       - python34-virtualenv
       - libappstream-glib
       - elfutils
       - flatpak-builder
       - git
       - ostree
       # flat-manager-client needs these:
       - python34-requests
       - python34-gobject
    state: latest
  when: ansible_distribution == "CentOS"
  tags:
   - buildbot-worker

- name: create buildbot user
  user:
    name: "{{ buildbot_worker_user }}"
    home: "{{ buildbot_worker_home }}"
    system: yes
  tags:
   - buildbot-worker

- name: install pip and buildbot-worker in virtualenv
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ buildbot_worker_sandbox }}"
    virtualenv_command: "{{ buildbot_worker_virtualenv_command }}"
    virtualenv_python: "{{ buildbot_worker_virtualenv_python }}"
  with_items:
   - pip
   - buildbot-worker
  become_user: "{{ buildbot_worker_user }}"
  tags:
   - buildbot-worker

- name: create buildbot-worker
  command: >
    '{{ buildbot_worker_sandbox }}/bin/buildbot-worker' create-worker
    '{{ buildbot_worker_dir }}'
    '{{ buildbot_worker_master }}'
    '{{ buildbot_worker_name }}'
    '{{ buildbot_worker_password }}'
  args:
    creates: "{{ buildbot_worker_dir }}/buildbot.tac"
  become: yes
  become_user: "{{ buildbot_worker_user }}"
  tags:
   - buildbot-worker

- name: set admin info
  copy:
    content: '{{ buildbot_worker_admin }}'
    dest: "{{ buildbot_worker_dir }}/info/admin"
  tags:
   - buildbot-worker

- name: set host info
  copy:
    content: '{{ buildbot_worker_description }}'
    dest: "{{ buildbot_worker_dir }}/info/host"
  tags:
   - buildbot-worker

- name: add systemd unit
  template:
    src: buildbot-worker.service.j2
    dest: /etc/systemd/system/buildbot-worker.service
  notify:
   - restart buildbot-worker
  tags:
   - buildbot-worker

- name: enable and start worker
  systemd:
    name: buildbot-worker
    daemon_reload: yes
    enabled: yes
  notify:
   - restart buildbot-worker
  tags:
   - buildbot-worker
