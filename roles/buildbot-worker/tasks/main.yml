- name: add Ubuntu PPAs
  apt_repository:
    repo: "{{ item }}"
  with_items:
    - "ppa:alexlarsson/flatpak"
    - "ppa:git-core/ppa"
  when: ansible_os_family == "Debian"

- name: apt update
  apt: update_cache=yes cache_valid_time=3600
  when: ansible_os_family == "Debian"

- name: install buildbot packages (deb)
  package:
    name:
      - appstream-util
      - build-essential
      - bzr
      - elfutils
      - flatpak-builder
      - gcc # Needed for installing twisted
      - git
      - ostree
      - python3-dev
      - python3-pip
      - subversion
      - virtualenv
      # repoclient needs these:
      - gir1.2-ostree-1.0
      - python3-gi
      - python3-requests
    state: latest
  when: ansible_os_family == "Debian"

- name: install buildbot packages (rpm)
  yum:
    name:
      - "@development-tools"
      - bzr
      - elfutils
      - flatpak-builder
      - gcc # Needed for installing twisted
      - git
      - libappstream-glib
      - ostree
      - python34-pip
      - python34-virtualenv
      - subversion
      # flat-manager-client needs these:
      - python34-gobject
      - python34-requests
    state: latest
  when: ansible_distribution == "CentOS"

- name: create buildbot user
  user:
    name: "{{ buildbot_worker_user }}"
    home: "{{ buildbot_worker_home }}"
    system: yes

- name: install pip and buildbot-worker in virtualenv
  pip:
    name: "{{ item }}"
    state: latest
    virtualenv: "{{ buildbot_worker_sandbox }}"
    virtualenv_command: "{{ buildbot_worker_virtualenv_command }}"
    virtualenv_python: "{{ buildbot_worker_virtualenv_python }}"
  with_items:
   - pip
   - buildbot-worker
  become: true
  become_user: "{{ buildbot_worker_user }}"

- name: create directories for worker configuration
  file:
    path: "{{ item }}"
    state: directory
  become: true
  become_user: "{{ buildbot_worker_user }}"
  with_items:
    - "{{ buildbot_worker_dir }}"
    - "{{ buildbot_worker_dir }}/info"

- name: configure worker
  template:
    src: buildbot.tac.j2
    dest: "{{ buildbot_worker_dir }}/buildbot.tac"
  notify:
   - restart buildbot-worker

- name: set admin info
  copy:
    content: '{{ buildbot_worker_admin }}'
    dest: "{{ buildbot_worker_dir }}/info/admin"

- name: set host info
  copy:
    content: '{{ buildbot_worker_description }}'
    dest: "{{ buildbot_worker_dir }}/info/host"

- name: add systemd unit
  template:
    src: buildbot-worker.service.j2
    dest: /etc/systemd/system/buildbot-worker.service
  notify:
   - restart buildbot-worker

- name: enable and start worker
  systemd:
    name: buildbot-worker
    daemon_reload: yes
    enabled: yes
    state: started
  notify:
   - restart buildbot-worker
